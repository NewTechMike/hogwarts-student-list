{"ast":null,"code":"var _jsxFileName = \"/Users/mikeharris/Developement/code/phase-3/phase-3-project/hogwarts-student-list/src/components/Students.js\";\nimport React from \"react\";\nimport ListItem from \"./ListItem\";\nimport NewStudent from './NewStudent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Students(_ref) {\n  let {\n    id,\n    name,\n    handleRemove,\n    handleAddNew\n  } = _ref;\n  console.log(\"(S)name: \", name);\n  console.log(\"(S)id: \", id);\n  const list_of_names = name.map(names => {\n    return names.name;\n  });\n  console.log(list_of_names);\n  const list_of_ids = name.map(names => {\n    return names.id;\n  });\n  console.log(list_of_id); //Work on getting that \"id\" from the destructed props, into\n  //ListItem\n\n  /* const displayStudents = name.map((names, id) => {\n     console.log(\"(S)Name: \", name)\n     return <ListItem \n       key={id}\n       id={id}\n       student_name={names}\n       onRemove={handleRemove}\n       onAddNewStudent={handleAddNew}\n     />\n     }\n   )*/\n\n  /**{name.map((names)=>{\n        <ListItem\n        key={names.id}\n        student_name={names.name}\n        />\n      })} */\n\n  /**{list_of_names.filter((names)=>\n  <ListItem \n    key={names.id}\n    id={names.id}\n    student_name={names}\n    onRemove={handleRemove}\n  />)} */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Currently Enrolled Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewStudent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n      student_name: list_of_names\n    }, list_of_ids, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["/Users/mikeharris/Developement/code/phase-3/phase-3-project/hogwarts-student-list/src/components/Students.js"],"names":["React","ListItem","NewStudent","Students","id","name","handleRemove","handleAddNew","console","log","list_of_names","map","names","list_of_ids","list_of_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,QAAT,OAAyD;AAAA,MAAvC;AAACC,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,GAAuC;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,IAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,EAAvB;AAEA,QAAMM,aAAa,GAAGL,IAAI,CAACM,GAAL,CAAUC,KAAD,IAAS;AACtC,WAAOA,KAAK,CAACP,IAAb;AACD,GAFqB,CAAtB;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AAEA,QAAMG,WAAW,GAAGR,IAAI,CAACM,GAAL,CAAUC,KAAD,IAAS;AACpC,WAAOA,KAAK,CAACR,EAAb;AACD,GAFmB,CAApB;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ,EAZuD,CAgBvD;AACA;;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;;AAGM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,QAAD;AAEA,MAAA,YAAY,EAAEJ;AAFd,OACKG,WADL;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KA5DQV,Q;AA8DT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport ListItem from \"./ListItem\";\nimport NewStudent from './NewStudent';\n\nfunction Students({id, name, handleRemove, handleAddNew}){\n  console.log(\"(S)name: \", name)\n  console.log(\"(S)id: \", id)\n\n  const list_of_names = name.map((names)=>{\n    return names.name\n  })\n  console.log(list_of_names)\n\n  const list_of_ids = name.map((names)=>{\n    return names.id\n  })\n  console.log(list_of_id)\n\n\n\n  //Work on getting that \"id\" from the destructed props, into\n  //ListItem\n /* const displayStudents = name.map((names, id) => {\n    console.log(\"(S)Name: \", name)\n    return <ListItem \n      key={id}\n      id={id}\n      student_name={names}\n      onRemove={handleRemove}\n      onAddNewStudent={handleAddNew}\n    />\n    }\n  )*/\n\n\n  /**{name.map((names)=>{\n        <ListItem\n        key={names.id}\n        student_name={names.name}\n        />\n      })} */\n\n\n      /**{list_of_names.filter((names)=>\n      <ListItem \n        key={names.id}\n        id={names.id}\n        student_name={names}\n        onRemove={handleRemove}\n      />)} */\n\n  return(\n    <div>\n      <header>\n        Currently Enrolled Students\n      </header>\n      <NewStudent />\n      <ListItem \n      key={list_of_ids}\n      student_name={list_of_names}\n      />\n      \n    </div>\n  )\n}\n\nexport default Students;"]},"metadata":{},"sourceType":"module"}