{"ast":null,"code":"var _jsxFileName = \"/Users/mikeharris/Developement/code/phase-3/phase-3-project/hogwarts-student-list/src/components/Students.js\";\nimport React from \"react\";\nimport ListItem from \"./ListItem\";\nimport NewStudent from './NewStudent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Students(_ref) {\n  let {\n    id,\n    name,\n    handleRemove,\n    handleAddNew\n  } = _ref;\n  console.log(\"(S)name: \", name);\n  console.log(\"(S)id: \", id);\n  const list_of_names = name.map(names => {\n    return names.name;\n  });\n  console.log(list_of_names); //Work on getting that \"id\" from the destructed props, into\n  //ListItem\n\n  /* const displayStudents = name.map((names, id) => {\n     console.log(\"(S)Name: \", name)\n     return <ListItem \n       key={id}\n       id={id}\n       student_name={names}\n       onRemove={handleRemove}\n       onAddNewStudent={handleAddNew}\n     />\n     }\n   )*/\n\n  /**{name.map((names)=>{\n        <ListItem\n        key={names.id}\n        student_name={names.name}\n        />\n      })} */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Currently Enrolled Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewStudent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), name.map(student_info => {\n      student_info.each(names => {\n        /*#__PURE__*/\n        _jsxDEV(ListItem, {\n          id: names.id,\n          student_name: names,\n          onRemove: handleRemove\n        }, names.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this);\n      });\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["/Users/mikeharris/Developement/code/phase-3/phase-3-project/hogwarts-student-list/src/components/Students.js"],"names":["React","ListItem","NewStudent","Students","id","name","handleRemove","handleAddNew","console","log","list_of_names","map","names","student_info","each"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,QAAT,OAAyD;AAAA,MAAvC;AAACC,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,GAAuC;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,IAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,EAAvB;AAEA,QAAMM,aAAa,GAAGL,IAAI,CAACM,GAAL,CAAUC,KAAD,IAAS;AACtC,WAAOA,KAAK,CAACP,IAAb;AACD,GAFqB,CAAtB;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ,EAPuD,CAQvD;AACA;;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;;AACE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGL,IAAI,CAACM,GAAL,CAAUE,YAAD,IAAgB;AACxBA,MAAAA,YAAY,CAACC,IAAb,CAAmBF,KAAD,IAAS;AACzB;AAAA,gBAAC,QAAD;AAEE,UAAA,EAAE,EAAEA,KAAK,CAACR,EAFZ;AAGE,UAAA,YAAY,EAAEQ,KAHhB;AAIE,UAAA,QAAQ,EAAEN;AAJZ,WACOM,KAAK,CAACR,EADb;AAAA;AAAA;AAAA;AAAA;AAMD,OAPD;AAQC,KATF,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;KAjDQD,Q;AAmDT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport ListItem from \"./ListItem\";\nimport NewStudent from './NewStudent';\n\nfunction Students({id, name, handleRemove, handleAddNew}){\n  console.log(\"(S)name: \", name)\n  console.log(\"(S)id: \", id)\n\n  const list_of_names = name.map((names)=>{\n    return names.name\n  })\n  console.log(list_of_names)\n  //Work on getting that \"id\" from the destructed props, into\n  //ListItem\n /* const displayStudents = name.map((names, id) => {\n    console.log(\"(S)Name: \", name)\n    return <ListItem \n      key={id}\n      id={id}\n      student_name={names}\n      onRemove={handleRemove}\n      onAddNewStudent={handleAddNew}\n    />\n    }\n  )*/\n\n\n  /**{name.map((names)=>{\n        <ListItem\n        key={names.id}\n        student_name={names.name}\n        />\n      })} */\n  return(\n    <div>\n      <header>\n        Currently Enrolled Students\n      </header>\n      <NewStudent />\n      {name.map((student_info)=>{\n        student_info.each((names)=>{\n          <ListItem \n            key={names.id}\n            id={names.id}\n            student_name={names}\n            onRemove={handleRemove}\n          />\n        })\n        })    \n      }\n      \n    </div>\n  )\n}\n\nexport default Students;"]},"metadata":{},"sourceType":"module"}